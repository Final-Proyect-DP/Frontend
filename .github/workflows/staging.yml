name: Deploy Pull Request to main Environment

on:
  push:
    branches: [main]

jobs:
  build_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env file
        run: |
          cat <<EOF > .env
          VITE_API_LOGIN=${{ secrets.VITE_API_LOGIN }}
          VITE_API_LOGOUT=${{ secrets.VITE_API_LOGOUT }}
          VITE_API_FORGOT_PASSWORD=${{ secrets.VITE_API_FORGOT_PASSWORD }}
          VITE_API_RESET_PASSWORD=${{ secrets.VITE_API_RESET_PASSWORD }}
          VITE_API_REGISTER=${{ secrets.VITE_API_REGISTER }}
          VITE_API_DELETE_PROFILE=${{ secrets.VITE_API_DELETE_PROFILE }}
          VITE_API_UPDATE_PROFILE=${{ secrets.VITE_API_UPDATE_PROFILE }}
          VITE_API_FETCH_PROFILE=${{ secrets.VITE_API_FETCH_PROFILE }}
          VITE_API_CHATBOT=${{ secrets.VITE_API_CHATBOT }}
          VITE_API_MAPGENERATOR=${{ secrets.VITE_API_MAPGENERATOR }}
          VITE_API_GET_PRODUCTS=${{ secrets.VITE_API_GET_PRODUCTS }}
          VITE_API_GET_PRODUCTS_BY_ID=${{ secrets.VITE_API_GET_PRODUCTS_BY_ID }}
          VITE_API_GET_CATEGORY=${{ secrets.VITE_API_GET_CATEGORY }}
          VITE_API_GET_CATEGORY_BY_ID=${{ secrets.VITE_API_GET_CATEGORY_BY_ID }}
          VITE_API_GET_USER=${{ secrets.VITE_API_GET_USER }}
          VITE_API_GET_USER_BY_ID=${{ secrets.VITE_API_GET_USER_BY_ID }}
          VITE_API_CREATE_PRODUCT=${{ secrets.VITE_API_CREATE_PRODUCT }}
          VITE_API_SOCKET=${{ secrets.VITE_API_SOCKET }}
          VITE_API_FETCH_CHATS=${{ secrets.VITE_API_FETCH_CHATS }}
          VITE_API_START_CHAT=${{ secrets.VITE_API_START_CHAT }}
          VITE_API_FETCH_MESSAGES=${{ secrets.VITE_API_FETCH_MESSAGES }}
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: byvoxel/frontend
          tags: type=raw,value=staging

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: byvoxel/frontend:staging
          build-args: $(cat .env | xargs)
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_ec2:
    name: Deploy to EC2 Instances
    runs-on: ubuntu-latest
    needs: build_docker_image
    strategy:
      matrix:
        ec2_instance: 
          - ec2-3-83-115-139.compute-1.amazonaws.com

    steps:
      - name: Deploy Container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ matrix.ec2_instance }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          timeout: "120s"
          script: |
            echo "Stopping existing container..."
            docker stop frontend || true
            docker rm frontend || true

            echo "Pulling latest image..."
            docker pull byvoxel/frontend:staging

            echo "Running new container..."
            docker run -d --name frontend -p 80:80 --restart unless-stopped byvoxel/frontend:staging

            echo "Cleaning up unused Docker resources..."
            docker system prune -af --volumes || true
