name: Deploy Pull Request to main Environment

on:
  push:
    branches: [main]

jobs:
  build_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: edit .env file
        env:
          VITE_API_LOGIN: ${{ secrets.VITE_API_LOGIN }}
          VITE_API_LOGOUT: ${{ secrets.VITE_API_LOGOUT }}
          VITE_API_FORGOT_PASSWORD: ${{ secrets.VITE_API_FORGOT_PASSWORD }}
          VITE_API_RESET_PASSWORD: ${{ secrets.VITE_API_RESET_PASSWORD }}
          VITE_API_REGISTER: ${{ secrets.VITE_API_REGISTER }}
          VITE_API_DELETE_PROFILE: ${{ secrets.VITE_API_DELETE_PROFILE }}
          VITE_API_UPDATE_PROFILE: ${{ secrets.VITE_API_UPDATE_PROFILE }}
          VITE_API_FETCH_PROFILE: ${{ secrets.VITE_API_FETCH_PROFILE }}
          VITE_API_CHATBOT: ${{ secrets.VITE_API_CHATBOT }}
          VITE_API_MAPGENERATOR: ${{ secrets.VITE_API_MAPGENERATOR }}
          VITE_API_GET_PRODUCTS: ${{ secrets.VITE_API_GET_PRODUCTS }}
          VITE_API_GET_CATEGORY: ${{ secrets.VITE_API_GET_CATEGORY }}
          VITE_API_GET_USER: ${{ secrets.VITE_API_GET_USER }}
        run: |
          echo "VITE_API_LOGIN=${VITE_API_LOGIN}" > .env
          echo "VITE_API_LOGOUT=${VITE_API_LOGOUT}" >> .env
          echo "VITE_API_FORGOT_PASSWORD=${VITE_API_FORGOT_PASSWORD}" >> .env
          echo "VITE_API_RESET_PASSWORD=${VITE_API_RESET_PASSWORD}" >> .env
          echo "VITE_API_REGISTER=${VITE_API_REGISTER}" >> .env
          echo "VITE_API_DELETE_PROFILE=${VITE_API_DELETE_PROFILE}" >> .env
          echo "VITE_API_UPDATE_PROFILE=${VITE_API_UPDATE_PROFILE}" >> .env
          echo "VITE_API_FETCH_PROFILE=${VITE_API_FETCH_PROFILE}" >> .env
          echo "VITE_API_CHATBOT=${VITE_API_CHATBOT}" >> .env
          echo "VITE_API_MAPGENERATOR=${VITE_API_MAPGENERATOR}" >> .env
          echo "VITE_API_GET_PRODUCTS=${VITE_API_GET_PRODUCTS}" >> .env
          echo "VITE_API_GET_CATEGORY=${VITE_API_GET_CATEGORY}" >> .env
          echo "VITE_API_GET_USER=${VITE_API_GET_USER}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub pass-reset
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: byvoxel/frontend
          tags: |
            type=raw,value=staging
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: byvoxel/frontend:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_ec2:
    name: Deploy to EC2 Instances
    runs-on: ubuntu-latest
    needs: build_docker_image
    strategy:
      matrix:
        ec2_instance: 
          - ec2-54-208-137-77.compute-1.amazonaws.com

    steps:
      - name: Deploy Container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ matrix.ec2_instance }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          timeout: "120s"
          script: |
            set -e
            echo "Deploying image: byvoxel/frontend:staging"
            sudo docker stop frontend || true
            sudo docker rm frontend || true
            sudo docker pull byvoxel/frontend:staging
            sudo docker run -d \
              --name frontend \
              -p 80:80 \
              --restart unless-stopped \
              byvoxel/frontend:staging
            sudo docker system prune -af --volumes || true